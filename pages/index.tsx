import Head from "next/head";
import Image from "next/image";
import { Inter } from "@next/font/google";
import Banner from "@/components/Banner";
import Header from "@/components/Header";
import requests from "@/utils/request";
import { Movie } from "@/typings";
import Row from "@/components/Row";
import { useRecoilState } from "recoil";
import { modalState } from "@/atoms/atoms";
import MovieModal from "@/components/MovieModal";

const inter = Inter({ subsets: ["latin"] });

interface Props {
  netflixOriginals: Movie[];
  trendingNow: Movie[];
  topRated: Movie[];
  actionMovies: Movie[];
  comedyMovies: Movie[];
  horrorMovies: Movie[];
  romanceMovies: Movie[];
  documentaries: Movie[];
}

export default function Home({
  netflixOriginals,
  trendingNow,
  topRated,
  actionMovies,
  comedyMovies,
  horrorMovies,
  romanceMovies,
  documentaries,
}: Props) {
  const modalOpen = useRecoilState(modalState);
  return (
    <>
      <Head>
        <title>Netflix - Homepage</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Header />
      <main className=" h-screen lg:h-[140vh] bg-gradient-to-b ">
        <Banner topRated={netflixOriginals} />
        <div className="mt-[10vh] pl-3 md:px-10 space-y-10 ">
          <Row title="Trending Now" shows={trendingNow} />
          <Row title="Top Rated" shows={topRated} />
          <Row title="Action Thrillers" shows={actionMovies} />
          <Row title="Comedies" shows={comedyMovies} />
          <Row title="Scary Movies" shows={horrorMovies} />
          <Row title="Romance Movies" shows={romanceMovies} />
          <Row title="Documentaries" shows={documentaries} />
        </div>
        {modalOpen && <MovieModal />}
      </main>
    </>
  );
}
export const getServerSideProps = async () => {
  const [
    netflixOriginals,
    trendingNow,
    topRated,
    actionMovies,
    comedyMovies,
    horrorMovies,
    romanceMovies,
    documentaries,
  ] = await Promise.all([
    fetch(requests.fetchNetflixOriginals).then((res) => res.json()),
    fetch(requests.fetchTrending).then((res) => res.json()),
    fetch(requests.fetchTopRated).then((res) => res.json()),
    fetch(requests.fetchActionMovies).then((res) => res.json()),
    fetch(requests.fetchComedyMovies).then((res) => res.json()),
    fetch(requests.fetchHorrorMovies).then((res) => res.json()),
    fetch(requests.fetchRomanceMovies).then((res) => res.json()),
    fetch(requests.fetchDocumentaries).then((res) => res.json()),
  ]);

  return {
    props: {
      netflixOriginals: netflixOriginals.results,
      trendingNow: trendingNow.results,
      topRated: topRated.results,
      actionMovies: actionMovies.results,
      comedyMovies: comedyMovies.results,
      horrorMovies: horrorMovies.results,
      romanceMovies: romanceMovies.results,
      documentaries: documentaries.results,
    },
  };
};
